连续数打乱判断少了哪个数
问题描述：

N个连续的数（比如0～999）打乱 之后，随机取出1个数 ，问如何最快速的判断出少了哪一个？

算法描述：

由于数组顺序被打乱，最可行的办法就是建立一个bitmap，然后扫描一遍数组，并在bitmap中相应位置1，比如数组元素7就在bitmap第7位置1。最后再扫描一遍bitmap就知道缺失哪个数了，这样做的时间复杂度是O(2n)。

也可以用异或运算来分析下从0到N的异或结果，并将该结果与数组进行异或：

int main()
{    
    int n;
    int m = 34;
    int N = 999;
    int XOR = 0;

    for (n=0; n<N; n++) {
        XOR ^= n; 
    }
    
    for (n=0; n<N; n++) {
        if (n != m)
            XOR ^= n;
    }

    printf("missing=%d\n", XOR);

    return 0;
}
