ou are climbing a stair case. It takes n steps to reach to the top.

Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?

Note: Given n will be a positive integer.

Example 1:

Input: 2
Output: 2
Explanation: There are two ways to climb to the top.
1. 1 step + 1 step
2. 2 steps

Example 2:

Input: 3
Output: 3
Explanation: There are three ways to climb to the top.
1. 1 step + 1 step + 1 step
2. 1 step + 2 steps
3. 2 steps + 1 step


// time o(n) space o(1)
public int climbStairs(int n) {
        if(n < 3) return n;
        int prepre = 1;
        int pre = 2;
        int cur = 0;
        while(n > 2) {
            cur = (pre + prepre);
            prepre = pre;
            pre = cur;  
            n--;
        }
        return cur;
}


// time and space O(2^n)
public int climaStairs(int n) {
        if(n < 3) return n;
        return climbStairs(n - 1) + climbStairs(n - 2);
}

 
