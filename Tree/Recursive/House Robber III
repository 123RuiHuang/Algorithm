Time O(n) Space O(h)

public int rob(TreeNode root) {
        if (root == null) return 0;
        int[] resultCandidate = helper(root);
        return Math.max(resultCandidate[0], resultCandidate[1]);                                           
}
    
public int[] helper(TreeNode root) {
        if (root == null) return new int[2];
        int[] left = helper(root.left);
        int[] right = helper(root.right);
        int resultStartWithRoot = root.val + left[1] + right[1];
        int resultWithoutRoot = Math.max(left[0], left[1]) + Math.max(right[0], right[1]);
        return new int[]{resultStartWithRoot, resultWithoutRoot};
}
