Time O(n), Space O(h)
class Solution {
   TreeNode ans;
   public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {
       hasAtLeastOneNode(root, p, q);
       return ans;
    }
    
    public boolean hasAtLeastOneNode(TreeNode root, TreeNode p, TreeNode q) {
        if (root == null) return false;
        boolean left = hasAtLeastOneNode(root.left, p, q);
        boolean right = hasAtLeastOneNode(root.right, p, q);
        boolean mid = ((root == p) || (root == q));
        if (mid ? left ^ right : left && right)  ans = root; // only two are true
        return left || right || mid;
    }  
}
