// push right child first and then push left child
public List<Integer> preorderTraversal(TreeNode root) {
        if(root == null) return new ArrayList<Integer>();
        Deque<TreeNode> stack = new ArrayDeque<TreeNode>();
        List<Integer> list = new ArrayList<Integer>();
        stack.push(root);
        TreeNode curNode;
        while(!stack.isEmpty()) {
            curNode = stack.pop();
            list.add(curNode.val);
            if(curNode.right != null) stack.push(curNode.right);
            if(curNode.left != null) stack.push(curNode.left); 
        }
        return list;
}
