    Time O(n), Space O(n)
    int result = 0;
    public int diameterOfBinaryTree(TreeNode root) {
        maxDepth(root);
        return result;
    }
    
    public int maxDepth(TreeNode root) {
        if (root == null) return 0;
        int leftHeight = maxDepth(root.left);
        int rightHeight = maxDepth(root.right);
        result = Math.max(result, leftHeight + rightHeight);
        return Math.max(leftHeight, rightHeight) + 1;
    }
    
    the longest path from a node to leaf is height - 1;
    so at line 12, it is leftHeight - 1 + rightHeight -1 + 2 
