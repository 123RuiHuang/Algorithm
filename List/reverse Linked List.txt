 // Iterative Time O(n); Space O(1)
 public ListNode reverseList(ListNode head) {
        ListNode prev = null;
        ListNode cur = head;
        ListNode next;
        while(cur != null) {
           next = cur.next;
           cur.next = prev;
           prev = cur;
           cur = next;
        }
        return prev;
    }
    
 // recursive Time O(n); Space O(n)
 
 public ListNode reverseList(ListNode head) {
        if(head == null || head.next == null) return head;
         ListNode p = reverseList(head.next);
         head.next.next = head;
         head.next = null;
         return p;
    }
