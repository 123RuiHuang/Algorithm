Given a linked list, return the node where the cycle begins. If there is no cycle, return null.

To represent a cycle in the given linked list, we use an integer pos which represents the position (0-indexed) in the linked list where tail connects to. If pos is -1, then there is no cycle in the linked list.

Note: Do not modify the linked list.
由于不能修改链表，所以不能像Linked List Cycle 里面那样设置一个dummy node,然后把所有节点都指向dummy node

// Time O(n); Space O(n)
public ListNode detectCycle(ListNode head) {
        if(head == null) return null;
        else {
            HashSet<ListNode> set = new HashSet<ListNode>();
            ListNode curNode = head;
            while(curNode != null) {
               if(set.contains(curNode)) return curNode;
               else {
                   set.add(curNode);
                   curNode = curNode.next;
               }
            }
        }
        return null;
}
