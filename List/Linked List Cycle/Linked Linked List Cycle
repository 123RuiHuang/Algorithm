Time O(n);Space O(1)

为什么有环的话一定会相遇？ 

证明：假设在某个时刻， slow 在 fast前方一步，则在下一次移动之后，会相遇。如果slow 在 fast 前方2步，则下一次移动之后，slow 和 fast会相距一步，则回归到第一种情况。若相聚n步，
则以此类推，可以转化为相距一步的情况

public boolean hasCycle(ListNode head) {
        if(head == null) return false;
        ListNode slow = head;
        ListNode fast = head.next;
        while (fast != null && fast.next != null) {
            if (fast == slow) return true;
            slow = slow.next;
            fast = fast.next.next;
        }
        return false;
}
    
public boolean hasCycle(ListNode head) {
        if(head == null) return false;
        ListNode slow = head;
        ListNode fast = head.next;
        try{
            while(fast != slow) {
                slow = slow.next;
                fast = fast.next.next;
            }
            return true;
        }catch(Exception e) {
            return false;
        }
        
    }
    
    public boolean hasCycle(ListNode head) {
        if(head == null) return false;
        ListNode slow = head;
        ListNode fast = head;
        while(fast.next != null && fast.next.next != null) {
            fast = fast.next.next;
            slow = slow.next;
            if(slow == fast) return true;
        }
        return false;
    }
    
     public boolean hasCycle(ListNode head) {
        if(head == null) return false;
        ListNode dummy = new ListNode(0);
        ListNode curNode = head;
        ListNode nextNode;
        while(curNode != null) {
            if(curNode.next == dummy) return true;
            nextNode = curNode.next;
            curNode.next = dummy;
            curNode = nextNode;
        }
        
        return false;       
}
